Index: libjogl2-java/make/build-jogl.xml
===================================================================
--- libjogl2-java.orig/make/build-jogl.xml
+++ libjogl2-java/make/build-jogl.xml
@@ -203,6 +203,19 @@
            <isset property="setup.noSWT"/> 
         </condition>
 
+        <condition property="isLinuxARM">
+            <and>
+                <istrue value="${isLinux}" />
+                <or>
+                    <os arch="arm" />
+                    <os arch="armv4" />
+                    <os arch="armv5" />
+                    <os arch="armv6" />
+                    <os arch="armv7" />
+                </or>
+            </and>
+        </condition>
+
         <property name="java.excludes.javadoc.packagenames"
                   value="jogamp.opengl.gl2.fixme.*,com.jogamp.audio.windows.waveout.TestSpatialization"/>
 
@@ -1189,7 +1202,7 @@
         <includepath path="/usr/local/include" />
       </compiler>
 
-      <compiler id="compiler.cfg.linux.armv6.jogl.x11" extends="compiler.cfg.linux.armv6">
+      <compiler id="compiler.cfg.linux.arm.jogl.x11" extends="compiler.cfg.linux">
         <!-- Need to force /usr/include headers on to include path (after all others), due to crosscompiler usage -->
         <compilerarg value="-idirafter" />
         <compilerarg value="/usr/include" />
@@ -1223,12 +1236,12 @@
         <syslibset libs="X11"/>
       </linker>
 
-      <linker id="linker.cfg.linux.armv6.jogl.x11" extends="linker.cfg.linux.armv6">
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="X11"/>
+      <linker id="linker.cfg.linux.arm.jogl.x11" extends="linker.cfg.linux">
+        <syslibset libs="X11"/>
       </linker>
 
       <linker id="linker.cfg.linux.aarch64.jogl.x11" extends="linker.cfg.linux.aarch64">
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="X11"/>
+        <syslibset libs="X11"/>
       </linker>
 
       <linker id="linker.cfg.android.jogl" extends="linker.cfg.android">
@@ -1316,10 +1329,10 @@
       <property name="linker.cfg.id.os"                    value="linker.cfg.linux.amd64.jogl.x11" />
     </target>
     
-    <target name="c.configure.linux.armv6" if="isLinuxARMv6">
-      <echo message="Linux.armv6" />
-      <property name="compiler.cfg.id"                     value="compiler.cfg.linux.armv6.jogl.x11" />
-      <property name="linker.cfg.id.os"                    value="linker.cfg.linux.armv6.jogl.x11" />
+    <target name="c.configure.linux.arm" if="isLinuxARM">
+      <echo message="Linux.arm" />
+      <property name="compiler.cfg.id"                     value="compiler.cfg.linux.arm.jogl.x11" />
+      <property name="linker.cfg.id.os"                    value="linker.cfg.linux.arm.jogl.x11" />
     </target>
     
     <target name="c.configure.linux.aarch64" if="isLinuxARM64">
@@ -1376,7 +1389,7 @@
       <property name="linker.cfg.id.os"                    value="linker.cfg.linux.jogl.x11" />
     </target>
 
-    <target name="c.configure.linux" depends="c.configure.linux.armv6,c.configure.linux.aarch64,c.configure.linux.x86,c.configure.linux.amd64,c.configure.linux.ia64,c.configure.linux.hppa,c.configure.linux.mips,c.configure.linux.mipsel,c.configure.linux.ppc,c.configure.linux.s390,c.configure.linux.s390x,c.configure.linux.sparc,c.configure.x11" if="isLinux" />
+    <target name="c.configure.linux" depends="c.configure.linux.arm,c.configure.linux.aarch64,c.configure.linux.x86,c.configure.linux.amd64,c.configure.linux.ia64,c.configure.linux.hppa,c.configure.linux.mips,c.configure.linux.mipsel,c.configure.linux.ppc,c.configure.linux.s390,c.configure.linux.s390x,c.configure.linux.sparc,c.configure.x11" if="isLinux" />
 
     <target name="c.configure.android" if="isAndroid">
       <echo message="Android" />
Index: libjogl2-java/make/build-nativewindow.xml
===================================================================
--- libjogl2-java.orig/make/build-nativewindow.xml
+++ libjogl2-java/make/build-nativewindow.xml
@@ -88,6 +88,19 @@
            <isset property="setup.noAWT"/> 
         </condition>
 
+        <condition property="isLinuxARM">
+            <and>
+                <istrue value="${isLinux}" />
+                <or>
+                    <os arch="arm" />
+                    <os arch="armv4" />
+                    <os arch="armv5" />
+                    <os arch="armv6" />
+                    <os arch="armv7" />
+                </or>
+            </and>
+        </condition>
+
         <property name="java.excludes.all" value="${java.excludes.awt}" />
         <echo message="java.excludes.all: ${java.excludes.all}" />
     </target>
@@ -344,7 +357,7 @@
         <includepath path="/usr/local/include" />
       </compiler>
 
-      <compiler id="compiler.cfg.linux.armv6.nativewindow.x11" extends="compiler.cfg.linux.armv6">
+      <compiler id="compiler.cfg.linux.arm.nativewindow.x11" extends="compiler.cfg.linux">
         <!-- Need to force /usr/include headers on to include path (after all others), due to crosscompiler usage -->
         <compilerarg value="-idirafter" />
         <compilerarg value="/usr/include" />
@@ -403,16 +416,16 @@
         <syslibset libs="Xrender"/>
       </linker>
 
-      <linker id="linker.cfg.linux.armv6.nativewindow.x11" extends="linker.cfg.linux.armv6">
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="X11" />
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="Xxf86vm" />
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="Xrender" />
+      <linker id="linker.cfg.linux.arm.nativewindow.x11" extends="linker.cfg.linux">
+        <syslibset libs="X11" />
+        <syslibset libs="Xxf86vm" />
+        <syslibset libs="Xrender" />
       </linker>
 
       <linker id="linker.cfg.linux.aarch64.nativewindow.x11" extends="linker.cfg.linux.aarch64">
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="X11" />
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="Xxf86vm" />
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="Xrender" />
+        <syslibset libs="X11" />
+        <syslibset libs="Xxf86vm" />
+        <syslibset libs="Xrender" />
       </linker>
 
       <linker id="linker.cfg.solaris.nativewindow.x11" extends="linker.cfg.solaris">
@@ -497,10 +510,10 @@
       <property name="linker.cfg.id.oswin"                  value="linker.cfg.linux.amd64.nativewindow.x11" />
     </target>
     
-    <target name="c.configure.linux.armv6" if="isLinuxARMv6">
-      <echo message="Linux.armv6" />
-      <property name="compiler.cfg.id"                      value="compiler.cfg.linux.armv6.nativewindow.x11" />
-      <property name="linker.cfg.id.oswin"                  value="linker.cfg.linux.armv6.nativewindow.x11" />
+    <target name="c.configure.linux.arm" if="isLinuxARM">
+      <echo message="Linux.arm" />
+      <property name="compiler.cfg.id"                      value="compiler.cfg.linux.arm.nativewindow.x11" />
+      <property name="linker.cfg.id.oswin"                  value="linker.cfg.linux.arm.nativewindow.x11" />
     </target>
     
     <target name="c.configure.linux.aarch64" if="isLinuxARM64">
@@ -557,7 +570,7 @@
       <property name="linker.cfg.id.oswin"                  value="linker.cfg.linux.nativewindow.x11" />
     </target>
 
-    <target name="c.configure.linux" depends="c.configure.linux.armv6,c.configure.linux.aarch64,c.configure.linux.x86,c.configure.linux.amd64,c.configure.linux.ia64,c.configure.linux.hppa,c.configure.linux.mips,c.configure.linux.mipsel,c.configure.linux.ppc,c.configure.linux.s390,c.configure.linux.s390x,c.configure.linux.sparc,c.configure.x11" if="isLinux" />
+    <target name="c.configure.linux" depends="c.configure.linux.arm,c.configure.linux.aarch64,c.configure.linux.x86,c.configure.linux.amd64,c.configure.linux.ia64,c.configure.linux.hppa,c.configure.linux.mips,c.configure.linux.mipsel,c.configure.linux.ppc,c.configure.linux.s390,c.configure.linux.s390x,c.configure.linux.sparc,c.configure.x11" if="isLinux" />
 
     <target name="c.configure.android" if="isAndroid">
       <echo message="Android" />
Index: libjogl2-java/make/build-newt.xml
===================================================================
--- libjogl2-java.orig/make/build-newt.xml
+++ libjogl2-java/make/build-newt.xml
@@ -167,6 +167,19 @@
            <isset property="setup.noOpenGL"/>
         </condition>
 
+        <condition property="isLinuxARM">
+            <and>
+                <istrue value="${isLinux}" />
+                <or>
+                    <os arch="arm" />
+                    <os arch="armv4" />
+                    <os arch="armv5" />
+                    <os arch="armv6" />
+                    <os arch="armv7" />
+                </or>
+            </and>
+        </condition>
+
         <property name="java.excludes.all" value="${java.excludes.awt}, ${java.excludes.swt}, ${java.excludes.applet3}, ${java.excludes.opengl}" />
         <echo message="java.excludes.all: ${java.excludes.all}" />
 
@@ -275,7 +288,7 @@
         <includepath path="/usr/local/include" />
       </compiler>
 
-      <compiler id="compiler.cfg.linux.armv6.newt.x11" extends="compiler.cfg.linux.armv6">
+      <compiler id="compiler.cfg.linux.arm.newt.x11" extends="compiler.cfg.linux">
         <!-- Need to force /usr/include headers on to include path (after all others), due to crosscompiler usage -->
         <compilerarg value="-idirafter" />
         <compilerarg value="/usr/include" />
@@ -341,20 +354,19 @@
         <!--syslibset libs="X11-xcb" /-->
       </linker>
 
-      <linker id="linker.cfg.linux.armv6.newt.x11" extends="linker.cfg.linux.armv6">
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="X11" />
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="Xrandr" />
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="Xcursor" />
+      <linker id="linker.cfg.linux.arm.newt.x11" extends="linker.cfg.linux">
+        <syslibset libs="X11" />
+        <syslibset libs="Xrandr" />
       </linker>
 
       <linker id="linker.cfg.linux.aarch64.newt.x11" extends="linker.cfg.linux.aarch64">
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="X11" />
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="Xrandr" />
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="Xcursor" />
+        <syslibset libs="X11" />
+        <syslibset libs="Xrandr" />
+        <syslibset libs="Xcursor" />
       </linker>
 
       <linker id="linker.cfg.android.newt" extends="linker.cfg.android">
-        <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" libs="android" />
+        <syslibset libs="android" />
       </linker>
 
       <linker id="linker.cfg.solaris.newt.x11" extends="linker.cfg.solaris">
@@ -443,11 +455,11 @@
       <echo message="linker.cfg.id.oswin ${linker.cfg.id.oswin}" />
     </target>
 
-    <target name="c.configure.linux.armv6" if="isLinuxARMv6">
-      <echo message="Linux.armv6" />
-      <property name="compiler.cfg.id"                      value="compiler.cfg.linux.armv6.newt.x11" />
-      <condition property="linker.cfg.id.oswin"             value="linker.cfg.linux.armv6.newt.x11"
-                                                            else="linker.cfg.linux.armv6">
+    <target name="c.configure.linux.arm" if="isLinuxARM">
+      <echo message="Linux.arm" />
+      <property name="compiler.cfg.id"                      value="compiler.cfg.linux.arm.newt.x11" />
+      <condition property="linker.cfg.id.oswin"             value="linker.cfg.linux.arm.newt.x11"
+                                                            else="linker.cfg.linux.arm">
           <isset property="isX11" />
       </condition>
       <echo message="linker.cfg.id.oswin ${linker.cfg.id.oswin}" />
@@ -539,7 +551,7 @@
       <property name="linker.cfg.id.oswin"                  value="linker.cfg.linux.newt.x11" />
     </target>
 
-    <target name="c.configure.linux" depends="c.configure.linux.x86,c.configure.linux.amd64,c.configure.linux.armv6,c.configure.linux.aarch64,c.configure.linux.hppa,c.configure.linux.mips,c.configure.linux.mipsel,c.configure.linux.ppc,c.configure.linux.s390,c.configure.linux.s390x,c.configure.linux.sparc,c.configure.linux.ia64,c.configure.x11" if="isLinux"/>
+    <target name="c.configure.linux" depends="c.configure.linux.x86,c.configure.linux.amd64,c.configure.linux.arm,c.configure.linux.aarch64,c.configure.linux.hppa,c.configure.linux.mips,c.configure.linux.mipsel,c.configure.linux.ppc,c.configure.linux.s390,c.configure.linux.s390x,c.configure.linux.sparc,c.configure.linux.ia64,c.configure.x11" if="isLinux"/>
 
     <target name="c.configure.android" if="isAndroid">
       <echo message="Android" />
Index: libjogl2-java/make/scripts/make.jogl.all.linux-armv7hf.sh
===================================================================
--- /dev/null
+++ libjogl2-java/make/scripts/make.jogl.all.linux-armv7hf.sh
@@ -0,0 +1,27 @@
+#! /bin/sh
+
+# arm-linux-gnueabihf == armhf triplet
+PATH=`pwd`/../../gluegen/make/lib/linux/arm-linux-gnueabihf/bin:$PATH
+export PATH
+
+#    -Dc.compiler.debug=true 
+#    -Dgluegen.cpptasks.detected.os=true \
+#    -DisUnix=true \
+#    -DisLinux=true \
+#    -DisLinuxARMv7=true \
+#    -DisX11=false \
+
+export TARGET_PLATFORM_ROOT=/
+export TARGET_PLATFORM_LIBS=/usr/lib/arm-linux-gnueabihf
+export TARGET_JAVA_LIBS=/usr/lib/jvm/java-6-openjdk-armhf/jre/lib/arm
+
+export GLUEGEN_CPPTASKS_FILE="../../gluegen/make/lib/gluegen-cpptasks-linux-armv7hf.xml"
+
+ant \
+    -Drootrel.build=build-linux-armv7hf \
+    -Dsetup.addNativeKD=true \
+    -Dsetup.addNativeOpenMAX=true \
+    -Dsetup.addNativeBroadcom=true \
+    -Djunit.run.arg0="-Dnewt.test.Screen.disableScreenMode" \
+    $* 2>&1 | tee make.jogl.all.linux-armv7hf.log
+
Index: libjogl2-java/make/scripts/tests-armv7_armhf.sh
===================================================================
--- /dev/null
+++ libjogl2-java/make/scripts/tests-armv7_armhf.sh
@@ -0,0 +1,7 @@
+#! /bin/bash
+
+spath=`dirname $0`
+
+. $spath/tests.sh  `which java` -DummyArg ../build-linux-armv7hf $*
+
+
Index: libjogl2-java/make/scripts/tests-linux-armv7hf.sh
===================================================================
--- /dev/null
+++ libjogl2-java/make/scripts/tests-linux-armv7hf.sh
@@ -0,0 +1,7 @@
+#! /bin/bash
+
+spath=`dirname $0`
+
+. $spath/tests.sh  `which java` -DummyArg ../build-linux-armv7hf $*
+
+
Index: libjogl2-java/make/build-oculusvr.xml
===================================================================
--- libjogl2-java.orig/make/build-oculusvr.xml
+++ libjogl2-java/make/build-oculusvr.xml
@@ -637,8 +637,7 @@
                 <syslibset libs="ws2_32"                                       if="isWindows"/>
 
                 <syslibset libs="X11 Xrandr udev m"                            if="isLinux" unless="isLinuxARMv6" />
-                <syslibset dir="${env.TARGET_PLATFORM_ROOT}/usr/lib" 
-                           libs="X11 Xrandr udev m"                            if="isLinuxARMv6" />
+                <syslibset libs="X11 Xrandr udev m"                            if="isLinuxARMv6" />
 
                 <syslibset dir="/usr/local/lib" libs="X11 Xrandr udev m"       if="isFreeBSD"/>
                 <syslibset dir="/usr/lib" libs="X11 Xrandr udev m"             if="isHPUX"/>
